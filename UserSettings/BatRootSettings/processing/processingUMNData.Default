#################################################################
#								#
#		PROCESSING CONFIGURATION			#
#								#
#################################################################


# =============================
# PATH
# =============================

PATH	RAW_DATA	= 	$BATROOT_RAWDATA	                         	# path to raw data
PATH 	AUX_FILES	= 	$BATROOT_AUXFILES				        # path to auxilliary files
PATH    NOISE_FILES     =       $BATROOT_NOISEFILES				 	# path to noise files and pulse templates
PATH	RQ_DATA		= 	$BATROOT_RQDATA				                # Output ROOT file location
PATH 	GPIB_FILE	= 	$BATROOT_GPIBFILES					# path to auxilliary files


PREFIX  RQ_DATA_PREFIX  =       umn_							# Prefix to the output file
PREFIX  NOISE_PREFIX    =       umn_Filter_						# Prefix to the noise file
PREFIX  FILEINDEX_PREFIX =      F							# Fxxxx for normal data, Vxxxx for veto pulsar

# =============================
# READ AUXILLIARY FILES
# =============================


READ	ISR_FILE	=	0	# ISR file 
READ	INFO_FILE	=	0	# Info file 

# Note:
#   - if READ INFO_FILE = 0 , default sample rate, pre and post-trigger are used (see below)
#   - if READ ISR_FILE  = 0,  pulses are not normalized, no Qbias information

# no GPIB or DMM file available at UF?
READ	GPIB_FILE	=	0	# GPIB file 
READ 	DMM_FILE	=	0	# DMM file

READ 	FILTER_FILE	=	1	# FILTER file - mandatory for optimal filter processing!	

# =============================
# GENERAL PROCESSING CONFIG
# =============================


PARAMETER_INTEGER	MAX_EVENTS	=  	10000 		# max number of events to process
PARAMETER_INTEGER	DEBUG		=	1 		
PARAMETER_INTEGER	MAX_ZIPS	= 	2		# total number of detectors
PARAMETER_INTEGER   	MAX_TOWERS      =       1               # total number of towers


# Type number taken from raw data format

PARAMETER_INTEGER	DET_TYPE 		DETECTOR 1-2		= 4    # ZIPS

PARAMETER_INTEGER       WRITE_PROCESS_INFO = 	1		# store processing settings
PARAMETER_INTEGER       WRITE_SETTINGS_INFO  = 	1		# store analysis config parameters
PARAMETER_INTEGER       WRITE_DETCONFIG_INFO  = 1		# store detector config parameters
PARAMETER_INTEGER       WRITE_FILTER_INFO  = 	1		# calculate and store filter quantities
PARAMETER_INTEGER       WRITE_NOISE_PULSES  = 	1		# store pulses processed for filter calculation

# =============================
# ANALYSIS FLAGS
# =============================



# -------------  VETO PROCESSING -------------------

# no veto at TF
DO_PROCESSING	VETO		=	0
WRITE_RQ	VETO		=	0


# ------------ TRIGGER  PROCESSING ------------------

DO_PROCESSING		TRIGGER		=	0
WRITE_RQ		TRIGGER		=	0


# --------------- ZIP PROCESSING -------------------

DO_PROCESSING	DETECTOR 1-2	=	1
WRITE_RQ	DETECTOR 1-2	=	1

CALC_PHONON_TEMPLATE	 DETECTOR 1-17   =  1
CALC_CHARGE_TEMPLATE 	 DETECTOR 1-17   =  1

#
#  flags for specific pulse algorithms 
#  (name of the algorithm should be same as the analysis class)
#  

# phonon analysis classes - DO NOT modify or copy this comment (for auto_analysis) 

DO_PHONON_ALGORITHM     InflectionTime          DETECTOR 1-2	=	0
DO_PHONON_ALGORITHM     PipeFitPhonon 		    DETECTOR 1-2	=	0 # algorithm not yet optimized for TF
DO_PHONON_ALGORITHM	    OptimalFilterPhonon	    DETECTOR 1-2	=	1
DO_PHONON_ALGORITHM	    VarFreqRTFTWalkPhonon 	DETECTOR 1-2	=	0
DO_PHONON_ALGORITHM     ConstFreqRTFTWalkPhonon DETECTOR 1-2    =  	1 
DO_PHONON_ALGORITHM	    PulseIntegral 		    DETECTOR 1-2	=	1
DO_PHONON_ALGORITHM     NoiseSelector           DETECTOR 1-2   	=  	0

# phonon analysis with sum of pulses 

DO_PHONON_TOT		OptimalFilterPhonon	    DETECTOR 1-2	=	1

DO_PHONON_TOT		ConstFreqRTFTWalkPhonon	DETECTOR 1-2	=	1

DO_PHONON_TOT		VarFreqRTFTWalkPhonon	DETECTOR 1-2	=	0


# charge analysis classes - DO NOT modify or copy this comment (for auto_analysis)

DO_CHARGE_ALGORITHM F5ChargeX               DETECTOR 1-2	=	0

DO_CHARGE_ALGORITHM	OptimalFilterChargeX	DETECTOR 1-2	=	1
DO_CHARGE_ALGORITHM	OptimalFilterCharge 	DETECTOR 1-2	=	1

DO_CHARGE_ALGORITHM	RTFTWalkCharge 		    DETECTOR 1-2	=	1

DO_CHARGE_ALGORITHM	ChargeNoiseCovariance 	DETECTOR 1-2	=	0 # only for special studies, located in NoiseBuilder
